[
  {
    "type": "tldr",
    "content": ""
  },
  {
    "type": "markdown",
    "content": "##Гайд по возможностьям движка z-sort для написания красивых и понятных технических статей\n\nСейчас у нас есть поддержка *4* видов секций \n\n- Markdown c поддержкой всех привычных функций $ \\LaTeX $ \n\n- Редактор графов\n\n\t - С вершинами в виде дерева\n\n\t - С вершинами по кругу\n\n- Редактор чартов\n\n\t - Line chart\n\n\t - Smooth line chart\n\n\t - Scatter chart\n\n\t - Bar chart\n\n\t - Pie chart\n\n- Секция с шагами для наглядного описания алгоритмов"
  },
  {
    "type": "markdown",
    "content": "# Секция с маркдауном и $ \\LaTeX $ "
  },
  {
    "type": "markdown",
    "content": "## Сочетания в комбинаторике"
  },
  {
    "type": "markdown",
    "content": "В комбинаторике *сочетанием* из $ n $ по $ k $ называется набор $ k $ элементов, выбранных из данного множества, содержащего $ n $ различных элементов. \n\n Наборы, отличающиеся только **порядком** следования элементов (но не составом), считаются **одинаковыми**, этим сочетания отличаются от *размещений*.\n\n  Число сочетаний из  $ n $ по $ k $ равно **биномиальному коэффициенту** $$ \\binom{n}{k} = \\frac{n!}{k!(n-k)!} $$"
  },
  {
    "type": "markdown",
    "content": "# Секция с графами"
  },
  {
    "type": "markdown",
    "content": "В обычном интерфейсе $ \\LaTeX $ работа с графами реализована очень неудобно, а если там и получается что-то сделать, то все выходит некрасиво и некастомизированно. Эту проблему мы решили в нашем редакторе **z-sort**"
  },
  {
    "type": "markdown",
    "content": "### Древовидный граф"
  },
  {"type": "graph",
    "content": {
        "type": "dot",
        "node_color": "#D3D3D3",
        "edge_color": "#909090",
        "node_count": 9,
        "node_attributes": {
            "0": {"label":"12", "color":"blue"},
            "2": {"label":"6", "color":"yellow"},
            "8": {"label":"8", "color":"red"}
                },
        "edges": [
            {"from": 0, "to":1},
            {"from": 0, "to":3},
            {"from": 0, "to":7},
            {"from": 7, "to":8},
            {"from": 0, "to":2},
            {"from": 1, "to":3},
            {"from": 1, "to":5},
            {"from": 1, "to":4},
            {"from": 2, "to":5},
            {"from": 2, "to":6}
        ]
    }
  },
  {
    "type": "markdown",
    "content": "### Граф с вершинами по кругу"
  },
  {"type": "graph",
    "content": {
        "type": "circle",
        "node_color": "#D3D3D3",
        "edge_color": "#909090",
        "node_count": 8,
        "node_attributes": {
            "0": {"label":"12", "color":"blue"},
            "2": {"label":"6", "color":"yellow"},
            "7": {"label":"8", "color":"red"}
                },
        "edges": [
            {"from": 0, "to":1},
            {"from": 3, "to":3},
            {"from": 0, "to":2},
            {"from": 5, "to":3},
            {"from": 1, "to":4},
            {"from": 2, "to":5},
            {"from": 2, "to":6}
        ]
    }
  },
  {
    "type": "markdown",
    "content": "# Секция с чартами"
  },
  {
    "type": "markdown",
    "content": "Всегда бывает полезно увидеть представление в виде чарта, чтобы наглядно понять что да как. Поэтому мы реализовали сразу *пять* видов чартов, чтобы каждый нашел именно то, что ему надо."
  },
  {
    "type": "markdown",
    "content": "**Line charts** -- это привычные нам графики, которые можно как-угодно кастомизировать. Например, можно показывать сетку графика или нет, смягчить линии или оставить все так, как есть."
  },
  {
    "type": "markdown",
    "content": "### Usuall line chart"
  },
  {"type": "chart",
    "content": {
      "type": "line",
      "color": "#5768ff",
      "line_smooth": false,
      "show_grid": true,
      "x-axis": [
        0,
        1,
        2,
        3,
        4,
        5
      ],
      "y-axis": [
        4,
        5,
        0,
        3,
        0,
        1
      ]
    }
  },
  {
    "type": "markdown",
    "content": "### Smooth line chart"
  },
  {"type": "chart",
    "content": {
      "type": "line",
      "color": "#5768ff",
      "line_smooth": true,
      "show_grid": true,
      "x-axis": [
        0,
        1,
        2,
        3,
        4,
        5
      ],
      "y-axis": [
        4,
        5,
        0,
        3,
        0,
        1
      ]
    }
  },
  {
    "type": "markdown",
    "content": "### Scatter Chart"
  },
  {
    "type": "markdown",
    "content": "**Scatter chart** может помочь очень наглядно представить распределение данных, если вы пишите статью о машинном обучении или ещё в множестве других ситуаций"
  },
  {"type": "chart",
    "content": {
      "type": "scatter",
      "color": "#BF00B0",
      "x-axis": [
        0,
        1,
        1.5,
        2,
        3,
        3.5,
        4,
        5
      ],
      "y-axis": [
        4,
        5,
        3,
        0,
        3,
        2,
        0,
        1
      ]
    }
  },
  {
    "type": "markdown",
    "content": "### Bar Chart"
  },
  {
    "type": "markdown",
    "content": "**Bar chart** вас всегда выручит в написании какого-то отчета. Например, с помощь него вы можете продемонстрировать размер выручки за каждый месяц"
  },
  {"type": "chart",
    "content": {
      "type": "bar",
      "color": "#BF00B0",
      "x-axis": [
        0,
        1,
        2,
        3,
        4,
        5
      ],
      "y-axis": [
        2,
        5,
        1,
        3,
        2,
        4
      ]
    }
  },
  {
    "type": "markdown",
    "content": "### Pie Chart"
  },
  {
    "type": "markdown",
    "content": "С помощью **pie chart** вы с легкостью сможете рассказать о популярности различных языков програмирования на текущий момент"
  },
  {"type": "chart",
    "content": {
      "type": "pie",
      "labels": [
        "C",
        "Java",
        "Python",
        "C++",
        "Other"
      ],
      "ratio": [
        16,
        12,
        10,
        7,
        55
      ]
    }
  },
  {
    "type":"markdown",
    "content":"#Секция с шагами"
  },
  {
    "type":"markdown",
    "content":"И теперь **вишенка** на торте -- секция с шагами! Внутри нее вы можете использовать все секции, описанные выше. Это очень удобно, если вы рассказывате о каком-нибудь алгоритме, и вам важно пояснить свои действия шаг за шагом.\n\nНапример, вы хотите написать статью про построение двоичной кучи:"
  },
  {
    "type":"steps",
    "content":[
      [
        {
          "type":"markdown",
          "content":"#Ициализация"
        },
        {
          "type":"markdown",
          "content":"Начать стоит с добавление первого элемента в дерево, он будет являться корнем и уже образует упорядоченную кучу сам по себе."
        },
        {
          "type": "graph",
          "content": {
            "type": "dot",
            "node_color": "#D3D3D3",
            "edge_color": "#909090",
            "node_count": 7,
            "node_attributes": {
              "0": {"label":"12", "color":"yellow"}
            },
            "edges": [
              {"from": 0, "to":1},
              {"from": 0, "to":2},
              {"from": 1, "to":3},
              {"from": 1, "to":4},
              {"from": 2, "to":5},
              {"from": 2, "to":6}
            ]
          }
        }
      ],
      [
        {
          "type":"markdown",
          "content":"#Добавление элемента"
        },
        {
          "type":"markdown",
          "content":"Далее добавляем следующий элемент в первый незянятый слот в порядке BFS обхода."
        },
        {
          "type": "graph",
          "content": {
            "type": "dot",
            "node_color": "#D3D3D3",
            "edge_color": "#909090",
            "node_count": 7,
            "node_attributes": {
              "0": {"label":"12", "color":"yellow"},
              "1": {"label":"1", "color":"green"}
            },
            "edges": [
              {"from": 0, "to":1},
              {"from": 0, "to":2},
              {"from": 1, "to":3},
              {"from": 1, "to":4},
              {"from": 2, "to":5},
              {"from": 2, "to":6}
            ]
          }
        }
],
      [
        {
          "type":"markdown",
          "content":"#Восстановление упорядоченности"
        },
        {
          "type":"markdown",
          "content":"Чтобы восстановить упорядоченность кучи, <+поднимаем новый элемент наверх+>(Каким образом?){Меняем значениями с родителем}, пока он не станет меньше, чем все его предки."
        },
        {
          "type": "graph",
          "content": {
            "type": "dot",
            "node_color": "#D3D3D3",
            "edge_color": "#909090",
            "node_count": 7,
            "node_attributes": {
              "0": {"label":"1", "color":"green"},
              "1": {"label":"12", "color":"yellow"}
            },
            "edges": [
              {"from": 0, "to":1},
              {"from": 0, "to":2},
              {"from": 1, "to":3},
              {"from": 1, "to":4},
              {"from": 2, "to":5},
              {"from": 2, "to":6}
            ]
          }
        }

      ],
      [
        {
          "type":"markdown",
          "content":"Таким образом необходимо последовательно добавлять элементы и поднимать их наверх. В итоге получится упорядоченная куча с минимальным элементом в корнe."
        },
        {
          "type": "graph",
          "content": {
            "type": "dot",
            "node_color": "#D3D3D3",
            "edge_color": "#909090",
            "node_count": 7,
            "node_attributes": {
              "0": {"label":"1", "color":"yellow"},
              "1": {"label":"10", "color":"yellow"},
              "2": {"label":"5", "color":"yellow"},
              "3": {"label":"15", "color":"yellow"},
              "4": {"label":"107", "color":"yellow"},
              "5": {"label":"9", "color":"yellow"}
            },
            "edges": [
              {"from": 0, "to":1},
              {"from": 0, "to":2},
              {"from": 1, "to":3},
              {"from": 1, "to":4},
              {"from": 2, "to":5},
              {"from": 2, "to":6}
            ]
          }
        }
      ]
    ]
  }
]
